name: Delta Deploy

# Controls when the workflow will run
on:
  push:
    branches: [ master ]
    #paths: 'mytest/main/default/**'

  pull_request:
    branches: [ master ]
    #paths: 'mytest/main/default/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # using fetch-depth = 0 to make the entire history of commits available
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Setup Node
      uses: actions/setup-node@v1
      with: 
        node-version: '16'
    
    # Install SFDX CLI
    - name: Install SFDX CLI
      run: |
        npm install sfdx-cli --global
        echo y | sfdx plugins:install sfdx-git-delta

    # Authorize SF Org
    - name: Authorize SF Org
      env:
        CLIENT_ID: ${{ secrets.SALESFORCEPRODCLIENTID }}
        USERNAME: ${{ secrets.SALESFORCEPRODUSERNAME }}
        INSTANCE_URL: ${{ secrets.SALESFORCEPRODINSTANCEURL }}
      run: sfdx force:auth:jwt:grant --clientid $CLIENT_ID --jwtkeyfile ./buildfiles/server.key --username $USERNAME --instanceurl $INSTANCE_URL -a prod
    
    - name: Create Delta Changes Package
      run: |
        commit = cat ./deploymentCommit.txt
        echo commit
        sfdx sgd:source:delta --to HEAD --from $commit --output ./ --source=mytest/main/default/
        cat package/package.xml 

    # Deploy directly to Org; use alias as per org, no real implications
    - name: Deploy Package Changes
      run: sfdx force:source:deploy -x package/package.xml -u prod 
        
    - name: Storing SHA if deployment Successful
      run: |
        sfdx force:source:deploy:report -u prod
        echo GITHUB_SHA | tee ./deploymentCommit.txt
        git config --global usser.email "mehta.jay223@gmail.com"
        git config --global user.name "JayMehta"
        git status
        git add deploymentCommit.txt
        git commit -m "Last deployed Commit SHA updated"
        git push



      
      
